apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ogc-pilot-ewps.fullname" . }}
  labels:
    {{- include "ogc-pilot-ewps.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ogc-pilot-ewps.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ogc-pilot-ewps.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: nfs-pvc
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-nfs"
      serviceAccountName: {{ include "ogc-pilot-ewps.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: K8S_STORAGE_CLAIM
              value: "{{ .Release.Name }}-nfs"
            - name: K8S_CONTAINER_STORAGE_DIRECTORY
              value: /mnt
            - name: K8S_JOB_SERVICE_ACCOUNT
              value: {{ include "ogc-pilot-ewps.serviceAccountName" . }}
            - name: EWPS_DATA_ENDPOINT
              value: http://{{ .Values.ingress.host }}/data
            - name: K8S_TTL_SECONDS_AFTER_FINISHED
              value: http://{{ .Values.job_ttl_seconds_after_finish | default 3600 }}/data
            - name: EWPS_SERVER_NAME
              value: {{ .Values.ingress.host }}
            - name: K8S_JOB_NAMESPACE
              value: {{ .ewpsKubernetesNamespace | default .Release.Namespace }}
          volumeMounts:
            - name: nfs-pvc
              mountPath: "/mnt"
#          ports:
#            - name: http
#              containerPort: 5000
#              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/wps?service=WPS&version=2.0.0&request=GetCapabilities"
              port: 5000
          readinessProbe:
            httpGet:
              path: "/wps?service=WPS&version=2.0.0&request=GetCapabilities"
              port: 5000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
